/**
 * Description:  WEF builder regen class
 *
 * Licensed Materials - Property of IBM 
 * 5724-O03
 * (C) Copyright 2012. IBM Corp. All rights reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 * See Web Experience Factory ( product id 5724-O03 ) product license for terms and conditions of use. 
 *
 * This Java source file was generated by the Web Experience Factory.
 *
 * Do not edit generated code within the following comments /*##GENERATED_...
 */
import com.bowstreet.webapp.*;
import com.bowstreet.generation.*;
import com.bowstreet.util.*;
import com.bowstreet.builders.webapp.foundation.*;
import com.bowstreet.builders.webapp.pagelocation.*;
import com.bowstreet.builders.webapp.pageautomation.AutomationHelper;
import com.bowstreet.builders.webapp.pageautomation.PageAutomationBuilder;
import com.bowstreet.builders.webapp.pageautomation.content.Container;
import com.bowstreet.builders.webapp.pageautomation.content.Element;
import com.bowstreet.builders.webapp.pageautomation.content.Leaf;
import com.bowstreet.generation.BuilderCall;
import com.bowstreet.generation.BuilderInputs;
import com.bowstreet.generation.GenContext;
import com.bowstreet.util.StringUtil;
import com.bowstreet.webapp.WebApp;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.ResourceBundle;
import com.bowstreet.builders.webapp.methods.BuilderHelperUtil;

/**
 * Bowstreet builder regen class
 */
public class ClassName implements PageAutomationBuilder
{
    /**
     * Interface that has constants for all the builder input names
     */
    static public interface Constants
    {
	}


    /**
     * doBuilderCall - PageAutomation builders do their regen work here, getting inputs from builderInputs
     * and adding/modifying elements in the PageAutomation contents.  Note, this is called during a "Special"
     * phase of the generation and you are NOT allowed to invoke other Builders from this method.  This
     * special phase is actually between Construction and PostConstruction phases.  You are allowed to
     * inspect and modify the WebApp as you like, but invoking other Builders might cause an exception
     * in the Generation engine.
     *
     * If you need to invoke other Builders, your Builder class should ALSO implement WebAppBuilder, and
     * it should invoke those other Builders during the Construction or PostConstruction phases.
     *
     * @param getContext The GenContext for this regen
     * @param webApp The WebApp under construction
     * @param builderCall Use this to set errors, get BuilderDef, etc.
     * @param builderInputs The inputs for this builder call
     */
    public void doBuilderCall(GenContext genContext, AutomationHelper helper, BuilderCall builderCall, BuilderInputs builderInputs)
    {
        // System.out.println("builderInputs: " + builderInputs);
        WebApp webApp = helper.getWebApp();

        /*##GENERATED_BODY_BEGIN#InputAccessorCode#*/
        /*##GENERATED_BODY_END*/

        // @todo: Add your builder code here

	}
}
